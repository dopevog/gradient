{"version":3,"sources":["Assets/logo.png","Components/Header.js","Components/HexPicker/ColorSlider.js","Components/HexPicker/HexGradient.js","Components/HexPicker/CurrentColor.js","Components/HexPicker/HexPicker.js","Components/Stack/StackItem.js","Utils/hexConstants.js","Components/Stack/AddColorButton.js","Components/Stack/Stack.js","Components/Suggested/SuggestedItem.js","Components/Suggested/Suggested.js","Components/StopBar/StopBar.js","Components/CSS/CopyButton.js","Components/CSS/CSS.js","Components/Preview/DownloadButton.js","Components/Preview/ExpandButton.js","Components/Preview/Dimensions.js","Components/Preview/Degrees.js","Components/Preview/LinearRadial.js","Components/Preview/Center.js","Utils/generalUtils.js","Utils/colorUtils.js","Components/Preview/Preview.js","Utils/Gradient.js","Utils/Color.js","Utils/gradientConstants.js","Components/CSS/CopyConfirmation.js","App.js","Utils/inputConstants.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","className","src","logo","alt","style","fontFamily","fontWeight","fontSize","ColorSlider","hue","handleColorSlider","withStyles","root","borderRadius","height","width","padding","position","bottom","display","thumb","backgroundColor","opacity","boxShadow","background","margin","track","rail","paddingTop","paddingBottom","Slider","defaultValue","orientation","min","max","onChangeCommitted","e","value","title","HexGradient","colorwheelColor","SV","updatePosition","x","y","onStop","defaultPosition","bounds","left","right","top","CurrentColor","color","handleHexChange","handleRChange","handleGChange","handleBChange","hex","r","g","b","type","spellCheck","toLowerCase","onChange","HexPicker","StackItem","deleteFunction","changeSelected","cannotDelete","handleKeyDown","changeValue","stopValue","onDragStart","onDragOver","onDragEnd","handleStopChange","stop","selected","selectedDiv","darkDiv","isDark","closeDiv","displayedValue","onClick","draggable","size","marginRight","onKeyDown","onBlur","marginLeft","AddColorButton","clickFunction","buttonContainer","disabled","ButtonBase","centerRipple","Stack","gradient","addColor","deleteColor","reverseStack","stack","renderStack","map","index","key","length","SuggestedItem","setSuggested","toBgString","Fade","in","timeout","enter","name","Suggested","suggested","shuffleSuggested","renderSuggested","StopBar","handleStopSlider","toStopBarBgString","stopValues","getSortedStops","StopBarSlider","marginTop","paddingLeft","paddingRight","step","CopyButton","CSS","copy","showCSSConfirmation","textArea","select","document","execCommand","target","focus","this","toCSSBgString","rows","wrap","readOnly","ref","textarea","React","Component","DownloadButton","ExpandButton","Dimensions","handleWidthChange","handleHeightChange","Degrees","degrees","handleDegreesChange","GrayRadio","flexGrow","checked","Radio","LinearRadial","isLinear","changeFunction","FormControl","component","RadioGroup","aria-label","FormControlLabel","control","label","Center","center","renderPositions","shuffle","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","padLeft","s","hexToRGB","primary","substring","console","log","parseInt","rgb","i","c","pow","getLuminanceFromHex","hexToRgb","Number","isNaN","getHue","cmin","cmax","delta","h","round","hslToHex","hsl","l","abs","m","toString","generateImage","validDegrees","canvas","createElement","ctx","getContext","maxLen","aspect","angle","PI","toRadians","createLinearGradient","cos","sin","radius","hyp","sqrt","longer","shorter","halfHype","calculateRadius","start","end","offset","calculateCenterOffset","createRadialGradient","forEach","addColorStop","fillStyle","fillRect","toDataURL","Preview","isValidImage","download","url","link","href","click","expand","w","window","open","image","Image","setTimeout","write","outerHTML","scaledHeight","scaledWidth","handleLinearRadialChange","handleCenterChange","buttonsDisplayStyle","Customize","Gradient","colorString","push","join","sortStack","sort","a","clone","reverse","stops","Color","getRGB","getColorwheel","isEqual","changeHue","sl","toFixed","getSL","getSvPosition","v","d","rgbToHsv","blackPosition","changeColorFromPosition","hsv","f","p","q","t","slice","hsvToHex","SUGGESTIONS","CopyConfirmation","Slide","direction","mountOnEnter","unmountOnExit","App","state","screen","suggestedSelected","draggedColor","cssConfirmationDisplay","stopPropagation","shownSuggested","first","setState","gradientCopy","defaultColor","deletedIndex","unsetSuggested","newSelected","splice","stackCopy","prevState","suggestedName","selectedGradient","change","keyCode","setValue","hasPound","dataTransfer","effectAllowed","setData","parentNode","setDragImage","preventDefault","newStack","filter","currColor","newHex","values","Hidden","smDown","mdUp","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bfba16dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.556d2fea.png\";","import React from 'react';\r\nimport '../Styles/Header.css';\r\nimport logo from '../Assets/logo.png';\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div className='header-container'>\r\n            <img src={logo} alt='logo'></img>\r\n            <h1>\r\n                gradient\r\n                <span\r\n                    style={{\r\n                        fontFamily: 'Times New Roman',\r\n                        fontWeight: 'bold',\r\n                        fontSize: '37px',\r\n                    }}\r\n                >\r\n                </span>\r\n\r\n            </h1>\r\n            <p>BETA</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../../Styles/HexPicker/ColorSlider.css';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nfunction ColorSlider(props) {\r\n    const { hue, handleColorSlider } = props;\r\n\r\n    const ColorSlider = withStyles({\r\n        root: {\r\n            borderRadius: 4,\r\n            height: '240px !important',\r\n            width: 20,\r\n            padding: '0px 0px !important',\r\n            position: 'absolute',\r\n            bottom: '0px',\r\n            display: 'flex !important',\r\n        },\r\n        thumb: {\r\n            height: 7,\r\n            width: 15,\r\n            backgroundColor: 'var(--input-text-light-gray)',\r\n            opacity: 50,\r\n            borderRadius: 5,\r\n            boxShadow: '2px 2px 7px black',\r\n            '&:focus, &:hover, &$active': {\r\n                boxShadow: '2px 2px 7px black',\r\n                background: 'var(--hover-gray)',\r\n            },\r\n            margin: '0px 2px 2px 2px !important',\r\n        },\r\n\r\n        track: {\r\n            borderRadius: 4,\r\n            background: 'transparent',\r\n            height: 250,\r\n        },\r\n        rail: {\r\n            borderRadius: 4,\r\n            background:\r\n                'linear-gradient(to top, red 0%, #ff0 17%, lime 33%, cyan 50%, blue 66%, magenta 83%, red 100%)',\r\n            opacity: 100,\r\n            width: '20px !important',\r\n            paddingTop: '10px',\r\n            paddingBottom: '10px',\r\n            height: '230px !important',\r\n            position: 'absolute',\r\n            bottom: '0px',\r\n        },\r\n    })(Slider);\r\n\r\n    return (\r\n        <div className='colorslide-container'>\r\n            <ColorSlider\r\n                defaultValue={hue}\r\n                orientation='vertical'\r\n                min={0}\r\n                max={359}\r\n                onChangeCommitted={(e, value) => handleColorSlider(value)}\r\n                title='Change hue'\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ColorSlider;\r\n","import React from 'react';\r\nimport '../../Styles/HexPicker/HexGradient.css';\r\nimport Draggable from 'react-draggable';\r\n\r\nfunction HexGradient(props) {\r\n    const { colorwheelColor, SV, updatePosition } = props;\r\n    const { x, y } = SV;\r\n\r\n    function Slider() {\r\n        return (\r\n            <Draggable\r\n                onStop={(e, value) => {\r\n                    updatePosition({ x: value.x, y: value.y });\r\n                }}\r\n                defaultPosition={{ x, y }}\r\n                bounds={{ left: 0, right: 250, top: 0, bottom: 250 }}\r\n            >\r\n                <div className='sl-slider'></div>\r\n            </Draggable>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className='hexgradient-container'\r\n            title='Change saturation and value'\r\n        >\r\n            <div\r\n                className='hexgradient-base'\r\n                style={{ background: '#' + colorwheelColor }}\r\n            ></div>\r\n            <div className='hexgradient-white'></div>\r\n            <div className='hexgradient-black'></div>\r\n            <Slider />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HexGradient;\r\n","import React from 'react';\r\nimport '../../Styles/HexPicker/CurrentColor.css';\r\n\r\nfunction CurrentColor(props) {\r\n    const {\r\n        color,\r\n        handleHexChange,\r\n        handleRChange,\r\n        handleGChange,\r\n        handleBChange,\r\n    } = props;\r\n    const { hex, r, g, b } = color;\r\n\r\n    return (\r\n        <div className='currentcolor-container'>\r\n            <h2>COLOR</h2>\r\n            <div className='currentcolor-content'>\r\n                <div\r\n                    className='currentcolor-colorbox'\r\n                    style={{ backgroundColor: '#' + hex }}\r\n                ></div>\r\n                <div className='currentcolor-info'>\r\n                    <p>#</p>\r\n                    <input\r\n                        type='text'\r\n                        spellCheck='false'\r\n                        value={hex.toLowerCase()}\r\n                        onChange={(e) => handleHexChange(e, false)}\r\n                        title='Enter hex code'\r\n                    ></input>\r\n                    <p>R</p>\r\n                    <input\r\n                        type='number'\r\n                        value={r}\r\n                        onChange={(e) => handleRChange(e)}\r\n                        title='Enter red value'\r\n                    ></input>\r\n                    <p>G</p>\r\n                    <input\r\n                        type='number'\r\n                        value={g}\r\n                        onChange={(e) => handleGChange(e)}\r\n                        title='Enter green value'\r\n                    ></input>\r\n                    <p>B</p>\r\n                    <input\r\n                        type='number'\r\n                        value={b}\r\n                        onChange={(e) => handleBChange(e)}\r\n                        title='Enter blue value'\r\n                    ></input>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrentColor;\r\n","import React from 'react';\r\nimport '../../Styles/HexPicker/HexPicker.css';\r\nimport ColorSlider from './ColorSlider';\r\nimport HexGradient from './HexGradient';\r\nimport CurrentColor from './CurrentColor';\r\n\r\nfunction HexPicker(props) {\r\n    const {\r\n        colorwheelColor,\r\n        color,\r\n        handleHexChange,\r\n        handleRChange,\r\n        handleGChange,\r\n        handleBChange,\r\n        hue,\r\n        handleColorSlider,\r\n        SV,\r\n        updatePosition,\r\n    } = props;\r\n    return (\r\n        <div className='hexpicker-container'>\r\n            <CurrentColor\r\n                color={color}\r\n                handleHexChange={handleHexChange}\r\n                handleRChange={handleRChange}\r\n                handleGChange={handleGChange}\r\n                handleBChange={handleBChange}\r\n            />\r\n            <div className='hexpicker-bottom'>\r\n                <HexGradient\r\n                    colorwheelColor={colorwheelColor}\r\n                    SV={SV}\r\n                    updatePosition={updatePosition}\r\n                />\r\n                <ColorSlider hue={hue} handleColorSlider={handleColorSlider} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HexPicker;\r\n","import React from 'react';\r\nimport '../../Styles/Stack/StackItem.css';\r\nimport { IoIosMenu, IoIosClose } from 'react-icons/io';\r\nimport { INPUT_TEXT_GRAY } from '../../Utils/hexConstants';\r\n\r\nfunction StackItem(props) {\r\n    const {\r\n        color,\r\n        deleteFunction,\r\n        changeSelected,\r\n        cannotDelete,\r\n        handleKeyDown,\r\n        changeValue,\r\n        stopValue,\r\n        handleHexChange,\r\n        onDragStart,\r\n        onDragOver,\r\n        onDragEnd,\r\n        handleStopChange,\r\n    } = props;\r\n    const { hex, stop, selected } = color;\r\n    const selectedDiv = selected ? 'stackitem-selected' : '';\r\n    const darkDiv = color.isDark() ? 'stackitem-dark' : '';\r\n    const closeDiv = cannotDelete ? 'stackitem-no-close' : 'stackitem-close';\r\n    const displayedValue = selected ? stopValue : stop;\r\n\r\n    return (\r\n        <div className={selectedDiv}>\r\n            <div\r\n                className='stackitem-container'\r\n                onClick={changeSelected}\r\n                onDragOver={(e) => onDragOver(e, color)}\r\n            >\r\n                <div\r\n                    className='stackitem-icon-container'\r\n                    draggable\r\n                    onDragStart={(e) => onDragStart(e, color)}\r\n                    onDragEnd={onDragEnd}\r\n                >\r\n                    <div className='stackitem-drag'>\r\n                        <IoIosMenu\r\n                            size='25px'\r\n                            color={INPUT_TEXT_GRAY}\r\n                            style={{ padding: '5px', marginRight: '10px' }}\r\n                            title='Move'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className={darkDiv}>\r\n                    <input\r\n                        type='text'\r\n                        spellCheck='false'\r\n                        value={('#' + hex).toLowerCase()}\r\n                        style={{ backgroundColor: '#' + hex }}\r\n                        onChange={(e) => {\r\n                            handleHexChange(e, true);\r\n                        }}\r\n                        title='Enter hex code'\r\n                    ></input>\r\n                </div>\r\n                <input\r\n                    type='number'\r\n                    value={displayedValue}\r\n                    onKeyDown={(e) => handleKeyDown(e)}\r\n                    onChange={(e) => changeValue(e)}\r\n                    onBlur={(e) => handleStopChange(e)}\r\n                    title='Enter stop value'\r\n                ></input>\r\n                <div className='stackitem-icon-container'>\r\n                    <div className={closeDiv}>\r\n                        <IoIosClose\r\n                            size='35px'\r\n                            color={INPUT_TEXT_GRAY}\r\n                            title='Delete color'\r\n                            style={{ marginLeft: '7px' }}\r\n                            onClick={deleteFunction}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StackItem;\r\n","const LABEL_GRAY = '#8b8b8b';\r\n\r\nconst INPUT_TEXT_GRAY = '#686868';\r\n\r\nconst HOVER_GRAY = '#cecece';\r\n\r\nexport { LABEL_GRAY, INPUT_TEXT_GRAY, HOVER_GRAY };\r\n","import React from 'react';\r\nimport '../../Styles/Stack/AddColorButton.css';\r\nimport { IoIosAdd } from 'react-icons/io';\r\nimport { INPUT_TEXT_GRAY } from '../../Utils/hexConstants';\r\nimport { ButtonBase } from '@material-ui/core';\r\n\r\nfunction AddColorButton(props) {\r\n    const { clickFunction, disabled } = props;\r\n\r\n    const buttonContainer = disabled\r\n        ? 'add-color-button-disabled'\r\n        : 'add-color-container';\r\n\r\n    return (\r\n        <div className={buttonContainer}>\r\n            <ButtonBase centerRipple>\r\n                <div className='add-color-button' onClick={clickFunction}>\r\n                    <IoIosAdd size='35px' color={INPUT_TEXT_GRAY} />\r\n                    <p>Add Color</p>\r\n                </div>\r\n            </ButtonBase>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddColorButton;\r\n","import React from 'react';\r\nimport '../../Styles/Stack/Stack.css';\r\nimport StackItem from './StackItem';\r\nimport AddColorButton from './AddColorButton';\r\nimport { BsArrowUpDown } from 'react-icons/bs';\r\nimport { INPUT_TEXT_GRAY } from '../../Utils/hexConstants';\r\nimport { ButtonBase } from '@material-ui/core';\r\n\r\nfunction Stack(props) {\r\n    const {\r\n        gradient,\r\n        addColor,\r\n        changeSelected,\r\n        deleteColor,\r\n        handleKeyDown,\r\n        changeValue,\r\n        stopValue,\r\n        handleHexChange,\r\n        onDragStart,\r\n        onDragOver,\r\n        onDragEnd,\r\n        reverseStack,\r\n        handleStopChange,\r\n    } = props;\r\n    const { stack } = gradient;\r\n\r\n    const renderStack = stack.map((color) => (\r\n        <StackItem\r\n            color={color}\r\n            stack={stack}\r\n            deleteFunction={(e) => deleteColor(e, color.index)}\r\n            changeSelected={() => changeSelected(color.index)}\r\n            key={'stackitem-' + color.index}\r\n            cannotDelete={stack.length === 2}\r\n            handleKeyDown={handleKeyDown}\r\n            changeValue={changeValue}\r\n            stopValue={stopValue}\r\n            handleHexChange={handleHexChange}\r\n            onDragStart={onDragStart}\r\n            onDragOver={onDragOver}\r\n            onDragEnd={onDragEnd}\r\n            handleStopChange={handleStopChange}\r\n        />\r\n    ));\r\n\r\n    return (\r\n        <div className='stack-container'>\r\n            <div className='stack-header'>\r\n                <h2>STACK</h2>\r\n                <div\r\n                    className='stack-icon-container'\r\n                    onClick={reverseStack}\r\n                    title='Reverse'\r\n                >\r\n                    <ButtonBase centerRipple>\r\n                        <BsArrowUpDown color={INPUT_TEXT_GRAY} size='23px' />\r\n                    </ButtonBase>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='stack-container-label'>\r\n                <p />\r\n                <p>HEX</p>\r\n                <p>%</p>\r\n            </div>\r\n            {renderStack}\r\n            <AddColorButton\r\n                clickFunction={addColor}\r\n                disabled={stack.length === 5}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Stack;\r\n","import React from 'react';\r\nimport '../../Styles/Suggested/SuggestedItem.css';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nfunction SuggestedItem(props) {\r\n    const { gradient, selected, setSuggested } = props;\r\n    const background = gradient.toBgString();\r\n    const selectedDiv = selected ? 'suggesteditem-selected' : '';\r\n\r\n    return (\r\n        <Fade in={true} timeout={{ enter: 1500 }}>\r\n            <div className={selectedDiv}>\r\n                <div className='suggesteditem-container' onClick={setSuggested}>\r\n                    <div\r\n                        className='suggesteditem-colorbox'\r\n                        style={{ background }}\r\n                    ></div>\r\n                    <p>{gradient.name || ''}</p>\r\n                </div>\r\n            </div>\r\n        </Fade>\r\n    );\r\n}\r\n\r\nexport default SuggestedItem;\r\n","import React from 'react';\r\nimport '../../Styles/Suggested/Suggested.css';\r\nimport SuggestedItem from './SuggestedItem';\r\nimport { FiShuffle } from 'react-icons/fi';\r\nimport { INPUT_TEXT_GRAY } from '../../Utils/hexConstants';\r\nimport { ButtonBase } from '@material-ui/core';\r\n\r\nfunction Suggested(props) {\r\n    const { selected, suggested, setSuggested, shuffleSuggested } = props;\r\n\r\n    const renderSuggested = suggested.map((gradient) => (\r\n        <SuggestedItem\r\n            gradient={gradient}\r\n            selected={selected === gradient.name}\r\n            key={'suggesteditem-' + gradient.name}\r\n            setSuggested={(e) => setSuggested(e, gradient.name)}\r\n        />\r\n    ));\r\n\r\n    return (\r\n        <div className='suggested-container'>\r\n            <div className='suggested-header'>\r\n                <h2>SUGGESTED</h2>\r\n                <div\r\n                    className='suggested-icon-container'\r\n                    onClick={(e) => shuffleSuggested(e)}\r\n                    title='Shuffle'\r\n                >\r\n                    <ButtonBase centerRipple>\r\n                        <FiShuffle color={INPUT_TEXT_GRAY} size='20px' />\r\n                    </ButtonBase>\r\n                </div>\r\n            </div>\r\n            <div className='suggested-content'>{renderSuggested}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Suggested;\r\n","import React from 'react';\r\nimport '../../Styles/StopBar/StopBar.css';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nfunction StopBar(props) {\r\n    const { gradient, handleStopSlider } = props;\r\n    const background = gradient.toStopBarBgString();\r\n    const stopValues = gradient.getSortedStops();\r\n\r\n    const StopBarSlider = withStyles({\r\n        root: {\r\n            borderRadius: 4,\r\n            width: 800,\r\n            padding: '0px !important',\r\n        },\r\n        thumb: {\r\n            height: 30,\r\n            width: 10,\r\n            backgroundColor: 'var(--input-text-light-gray)',\r\n            opacity: 50,\r\n            borderRadius: 5,\r\n            marginTop: 5,\r\n            marginLeft: 5,\r\n            marginRight: 5,\r\n            boxShadow: '2px 2px 7px black',\r\n            '&:focus, &:hover, &$active': {\r\n                boxShadow: '2px 2px 7px black',\r\n                background: 'var(--hover-gray)',\r\n            },\r\n        },\r\n        track: {\r\n            height: 40,\r\n            borderRadius: 4,\r\n            background: 'transparent',\r\n        },\r\n        rail: {\r\n            height: 40,\r\n            borderRadius: 4,\r\n            background,\r\n            opacity: 100,\r\n            paddingLeft: '10px',\r\n            paddingRight: '10px',\r\n            width: 800,\r\n        },\r\n    })(Slider);\r\n\r\n    return (\r\n        <div className='stopbar-container'>\r\n            <StopBarSlider\r\n                defaultValue={stopValues}\r\n                step={1}\r\n                onChangeCommitted={(e, value) => handleStopSlider(value)}\r\n                title='Change stops'\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StopBar;\r\n","import React from 'react';\r\nimport '../../Styles/CSS/CopyButton.css';\r\nimport { MdContentCopy } from 'react-icons/md';\r\nimport { INPUT_TEXT_GRAY } from '../../Utils/hexConstants';\r\nimport { ButtonBase } from '@material-ui/core';\r\n\r\nfunction CopyButton(props) {\r\n    const { clickFunction } = props;\r\n\r\n    return (\r\n        <div\r\n            className='copybutton-container'\r\n            onClick={clickFunction}\r\n            title='Copy CSS to clipboard'\r\n        >\r\n            <ButtonBase centerRipple>\r\n                <MdContentCopy\r\n                    size='20px'\r\n                    color={INPUT_TEXT_GRAY}\r\n                    style={{ margin: '10px' }}\r\n                />\r\n            </ButtonBase>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CopyButton;\r\n","import React from 'react';\r\nimport '../../Styles/CSS/CSS.css';\r\nimport CopyButton from './CopyButton';\r\n\r\nclass CSS extends React.Component {\r\n    copy = (e) => {\r\n        const { showCSSConfirmation } = this.props;\r\n        this.textArea.select();\r\n        document.execCommand('copy');\r\n        e.target.focus();\r\n\r\n        showCSSConfirmation();\r\n    };\r\n\r\n    render() {\r\n        const { gradient } = this.props;\r\n        const background = gradient.toCSSBgString();\r\n\r\n        return (\r\n            <div className='css-container'>\r\n                <h2>CSS</h2>\r\n                <div className='css-content'>\r\n                    <textarea\r\n                        name='text'\r\n                        rows='8'\r\n                        wrap='soft'\r\n                        readOnly\r\n                        value={background}\r\n                        ref={(textarea) => (this.textArea = textarea)}\r\n                    ></textarea>\r\n                    <CopyButton clickFunction={(e) => this.copy(e)} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CSS;\r\n","import React from 'react';\r\nimport '../../Styles/Preview/DownloadButton.css';\r\nimport { FiDownload } from 'react-icons/fi';\r\nimport { INPUT_TEXT_GRAY } from '../../Utils/hexConstants';\r\nimport { ButtonBase } from '@material-ui/core';\r\n\r\nfunction DownloadButton(props) {\r\n    const { clickFunction } = props;\r\n\r\n    return (\r\n        <div\r\n            className='downloadbutton-container'\r\n            onClick={clickFunction}\r\n            title='Download image'\r\n        >\r\n            <ButtonBase centerRipple>\r\n                <FiDownload\r\n                    size='20px'\r\n                    color={INPUT_TEXT_GRAY}\r\n                    style={{ margin: '10px' }}\r\n                />\r\n            </ButtonBase>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DownloadButton;\r\n","import React from 'react';\r\nimport '../../Styles/Preview/ExpandButton.css';\r\nimport { BsArrowsAngleExpand } from 'react-icons/bs';\r\nimport { INPUT_TEXT_GRAY } from '../../Utils/hexConstants';\r\nimport { ButtonBase } from '@material-ui/core';\r\n\r\nfunction ExpandButton(props) {\r\n    const { clickFunction } = props;\r\n\r\n    return (\r\n        <div\r\n            className='expandbutton-container'\r\n            onClick={clickFunction}\r\n            title='See full image'\r\n        >\r\n            <ButtonBase centerRipple>\r\n                <BsArrowsAngleExpand\r\n                    size='20px'\r\n                    color={INPUT_TEXT_GRAY}\r\n                    style={{ margin: '10px' }}\r\n                />\r\n            </ButtonBase>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpandButton;\r\n","import React from 'react';\r\nimport '../../Styles/Preview/Dimensions.css';\r\n\r\nfunction Dimensions(props) {\r\n    const { height, width, handleWidthChange, handleHeightChange } = props;\r\n\r\n    return (\r\n        <div className='dimensions-container'>\r\n            <p>W</p>\r\n            <input\r\n                type='number'\r\n                value={width}\r\n                style={{ marginLeft: '7px', marginRight: '15px' }}\r\n                onChange={handleWidthChange}\r\n                title='Enter image width'\r\n            ></input>\r\n            <p>H</p>\r\n            <input\r\n                type='number'\r\n                value={height}\r\n                style={{ marginRight: '15px', marginLeft: '7px' }}\r\n                onChange={handleHeightChange}\r\n                title='Enter image height'\r\n            ></input>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dimensions;\r\n","import React from 'react';\r\nimport '../../Styles/Preview/Degrees.css';\r\n\r\nfunction Degrees(props) {\r\n    const { degrees, handleDegreesChange } = props;\r\n\r\n    return (\r\n        <div className='degrees-container'>\r\n            <p>°</p>\r\n            <input\r\n                type='number'\r\n                value={degrees}\r\n                style={{ marginLeft: '10px' }}\r\n                onChange={handleDegreesChange}\r\n                title='Enter degrees'\r\n            ></input>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Degrees;\r\n","import React from 'react';\r\nimport {\r\n    RadioGroup,\r\n    FormControl,\r\n    FormControlLabel,\r\n    Radio,\r\n} from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { LABEL_GRAY, HOVER_GRAY } from '../../Utils/hexConstants';\r\n\r\nconst GrayRadio = withStyles({\r\n    root: {\r\n        color: LABEL_GRAY,\r\n        '&$checked': {\r\n            color: LABEL_GRAY,\r\n        },\r\n        '&:hover': {\r\n            background: HOVER_GRAY,\r\n        },\r\n        padding: 3,\r\n        flexGrow: 1,\r\n    },\r\n    checked: {},\r\n})((props) => <Radio color='default' {...props} />);\r\n\r\nfunction LinearRadial(props) {\r\n    const { isLinear, changeFunction } = props;\r\n    const value = isLinear ? 'linear' : 'radial';\r\n\r\n    return (\r\n        <FormControl component='fieldset' style={{ marginLeft: '20px' }}>\r\n            <RadioGroup\r\n                aria-label='linearRadial'\r\n                name='linearRadial'\r\n                value={value}\r\n                onChange={changeFunction}\r\n            >\r\n                <FormControlLabel\r\n                    value='linear'\r\n                    control={<GrayRadio />}\r\n                    label='LINEAR'\r\n                    title='Change to linear gradient'\r\n                />\r\n                <FormControlLabel\r\n                    value='radial'\r\n                    control={<GrayRadio />}\r\n                    label='RADIAL'\r\n                    title='Change to radial gradient'\r\n                />\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default LinearRadial;\r\n","import React from 'react';\r\nimport '../../Styles/Preview/Center.css';\r\n\r\nfunction Center(props) {\r\n    const { center, clickFunction } = props;\r\n    const positions = [\r\n        'top left',\r\n        'top center',\r\n        'top right',\r\n        'center left',\r\n        'center center',\r\n        'center right',\r\n        'bottom left',\r\n        'bottom center',\r\n        'bottom right',\r\n    ];\r\n\r\n    const renderPositions = positions.map((position) =>\r\n        position === center ? (\r\n            <div\r\n                className='center-grid-item-selected'\r\n                key={'center' + position}\r\n            />\r\n        ) : (\r\n            <div\r\n                className='center-grid-item'\r\n                onClick={() => clickFunction(position)}\r\n                key={'center' + position}\r\n                title={`Change gradient center to ${position}`}\r\n            />\r\n        )\r\n    );\r\n    return (\r\n        <div className='center-container'>\r\n            <p>CENTER</p>\r\n            <div className='center-grid'>{renderPositions}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Center;\r\n","function shuffle(array) {\r\n    var currentIndex = array.length,\r\n        temporaryValue,\r\n        randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\nfunction toRadians(degrees) {\r\n    return degrees * (Math.PI / 180);\r\n}\r\n\r\nfunction calculateCenterOffset(width, height, center) {\r\n    switch (center) {\r\n        case 'top left':\r\n            return { width: -width / 2, height: -height / 2 };\r\n        case 'top center':\r\n            return { width: 0, height: -height / 2 };\r\n        case 'top right':\r\n            return { width: width / 2, height: -height / 2 };\r\n        case 'center left':\r\n            return { width: -width / 2, height: 0 };\r\n        case 'center center':\r\n            return { width: 0, height: 0 };\r\n        case 'center right':\r\n            return { width: width / 2, height: 0 };\r\n        case 'bottom left':\r\n            return { width: -width / 2, height: height / 2 };\r\n        case 'bottom center':\r\n            return { width: 0, height: height / 2 };\r\n        case 'bottom right':\r\n            return { width: width / 2, height: height / 2 };\r\n        default:\r\n            return;\r\n    }\r\n}\r\n\r\nfunction calculateRadius(width, height, center) {\r\n    const hyp = Math.sqrt(width * width + height * height);\r\n    const longer = Math.max(width, height);\r\n    const shorter = Math.min(width, height);\r\n    const halfHype = Math.sqrt((longer * longer) / 4 + shorter * shorter);\r\n\r\n    switch (center) {\r\n        case 'top left':\r\n        case 'top right':\r\n        case 'bottom right':\r\n        case 'bottom left':\r\n            return hyp;\r\n        case 'top center':\r\n        case 'center right':\r\n        case 'bottom center':\r\n        case 'center left':\r\n            return halfHype;\r\n        case 'center center':\r\n            return longer / 2;\r\n        default:\r\n            return;\r\n    }\r\n}\r\n\r\nfunction padLeft(s) {\r\n    return s.length === 1 ? '0' + s : s;\r\n}\r\n\r\nexport { shuffle, toRadians, calculateCenterOffset, calculateRadius, padLeft };\r\n","import {\r\n    toRadians,\r\n    calculateCenterOffset,\r\n    calculateRadius,\r\n} from './generalUtils';\r\n\r\nfunction hexToRGB(hex, primary) {\r\n    let s;\r\n    switch (primary) {\r\n        case 'r':\r\n            s = hex.substring(0, 2);\r\n            break;\r\n        case 'g':\r\n            s = hex.substring(2, 4);\r\n            break;\r\n        case 'b':\r\n            s = hex.substring(4, 6);\r\n            break;\r\n        default:\r\n            console.log('Not valid primary.');\r\n    }\r\n    return parseInt(s, 16);\r\n}\r\n\r\nfunction getLuminanceFromHex(hex) {\r\n    const r = hexToRGB(hex, 'r'),\r\n        g = hexToRGB(hex, 'g'),\r\n        b = hexToRGB(hex, 'b');\r\n    const rgb = [r, g, b];\r\n\r\n    for (let i = 0; i < rgb.length; i++) {\r\n        let c = rgb[i];\r\n        c /= 255;\r\n\r\n        if (c > 0.03928) {\r\n            c = Math.pow((c + 0.055) / 1.055, 2.4);\r\n        } else {\r\n            c /= 12.92;\r\n        }\r\n\r\n        rgb[i] = c;\r\n    }\r\n\r\n    return 0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2];\r\n}\r\n\r\nfunction isDark(hex) {\r\n    let L = getLuminanceFromHex(hex);\r\n    return L <= 0.5;\r\n}\r\n\r\nfunction toBgString(gradient) {\r\n    const { stack, isLinear, degrees, center } = gradient;\r\n    const validDegrees = degrees || 0;\r\n    let centerString = center === 'center center' ? '' : ' at ' + center;\r\n    let background = isLinear\r\n        ? 'linear-gradient(' + validDegrees + 'deg, '\r\n        : 'radial-gradient(circle' + centerString + ', ';\r\n\r\n    let colorString = [];\r\n    for (let i = 0; i < stack.length; i++) {\r\n        colorString.push('#' + stack[i].hex + ' ' + stack[i].stop + '%');\r\n    }\r\n\r\n    background += colorString.join(', ') + ')';\r\n\r\n    return background;\r\n}\r\n\r\nfunction toStopBarBgString(gradient) {\r\n    const { stack } = gradient;\r\n    let background = 'linear-gradient(90deg, ';\r\n\r\n    let colorString = [];\r\n    for (let i = 0; i < stack.length; i++) {\r\n        colorString.push('#' + stack[i].hex + ' ' + stack[i].stop + '%');\r\n    }\r\n\r\n    background += colorString.join(', ') + ')';\r\n\r\n    return background;\r\n}\r\n\r\nfunction toCSSBgString(gradient) {\r\n    const { stack, isLinear, degrees, center } = gradient;\r\n    const validDegrees = degrees || 0;\r\n    let centerString = center === 'center center' ? '' : ' at ' + center;\r\n\r\n    let background = 'background: ';\r\n    background += isLinear\r\n        ? 'linear-gradient(\\n    ' + validDegrees + 'deg,\\n    '\r\n        : 'radial-gradient(\\n    circle' + centerString + ',\\n    ';\r\n\r\n    let colorString = [];\r\n    for (let i = 0; i < stack.length; i++) {\r\n        colorString.push('#' + stack[i].hex + ' ' + stack[i].stop + '%');\r\n    }\r\n\r\n    background += colorString.join(',\\n    ') + '\\n);';\r\n\r\n    return background;\r\n}\r\n\r\nfunction hexToRgb(hex) {\r\n    const r = hexToRGB(hex, 'r');\r\n    const g = hexToRGB(hex, 'g');\r\n    const b = hexToRGB(hex, 'b');\r\n    if (!Number.isNaN(r) && !Number.isNaN(g) && !Number.isNaN(b)) {\r\n        return { r, g, b };\r\n    }\r\n}\r\n\r\nfunction getHue(rgb) {\r\n    // Make r, g, and b fractions of 1\r\n    let { r, g, b } = rgb;\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n\r\n    // Find greatest and smallest channel values\r\n    let cmin = Math.min(r, g, b),\r\n        cmax = Math.max(r, g, b),\r\n        delta = cmax - cmin,\r\n        h = 0;\r\n\r\n    if (delta === 0) h = 0;\r\n    // Red is max\r\n    else if (cmax === r) h = ((g - b) / delta) % 6;\r\n    // Green is max\r\n    else if (cmax === g) h = (b - r) / delta + 2;\r\n    // Blue is max\r\n    else h = (r - g) / delta + 4;\r\n\r\n    h = Math.round(h * 60);\r\n\r\n    // Make negative hues positive behind 360°\r\n    if (h < 0) h += 360;\r\n\r\n    return h;\r\n}\r\n\r\nfunction getSL(rgb) {\r\n    let { r, g, b } = rgb;\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n\r\n    // Find greatest and smallest channel values\r\n    let cmin = Math.min(r, g, b),\r\n        cmax = Math.max(r, g, b),\r\n        delta = cmax - cmin,\r\n        s = 0,\r\n        l = 0;\r\n\r\n    l = (cmax + cmin) / 2;\r\n\r\n    // Calculate saturation\r\n    s = delta === 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));\r\n\r\n    // Multiply l and s by 100\r\n    s = +(s * 100).toFixed(1);\r\n    l = +(l * 100).toFixed(1);\r\n    return { s, l };\r\n}\r\n\r\n//\r\nfunction hslToHex(hsl) {\r\n    let { h, s, l } = hsl;\r\n\r\n    s /= 100;\r\n    l /= 100;\r\n\r\n    let c = (1 - Math.abs(2 * l - 1)) * s,\r\n        x = c * (1 - Math.abs(((h / 60) % 2) - 1)),\r\n        m = l - c / 2,\r\n        r = 0,\r\n        g = 0,\r\n        b = 0;\r\n\r\n    if (0 <= h && h < 60) {\r\n        r = c;\r\n        g = x;\r\n        b = 0;\r\n    } else if (60 <= h && h < 120) {\r\n        r = x;\r\n        g = c;\r\n        b = 0;\r\n    } else if (120 <= h && h < 180) {\r\n        r = 0;\r\n        g = c;\r\n        b = x;\r\n    } else if (180 <= h && h < 240) {\r\n        r = 0;\r\n        g = x;\r\n        b = c;\r\n    } else if (240 <= h && h < 300) {\r\n        r = x;\r\n        g = 0;\r\n        b = c;\r\n    } else if (300 <= h && h < 360) {\r\n        r = c;\r\n        g = 0;\r\n        b = x;\r\n    }\r\n    // Having obtained RGB, convert channels to hex\r\n    r = Math.round((r + m) * 255).toString(16);\r\n    g = Math.round((g + m) * 255).toString(16);\r\n    b = Math.round((b + m) * 255).toString(16);\r\n\r\n    // Prepend 0s, if necessary\r\n    if (r.length === 1) r = '0' + r;\r\n    if (g.length === 1) g = '0' + g;\r\n    if (b.length === 1) b = '0' + b;\r\n\r\n    return r + g + b;\r\n}\r\n\r\n// hex to hex\r\nfunction getColorwheel(hex) {\r\n    let rgb = hexToRgb(hex);\r\n    if (rgb) {\r\n        let h = getHue(rgb);\r\n        let hsl = {\r\n            h,\r\n            s: 100,\r\n            l: 50,\r\n        };\r\n\r\n        return hslToHex(hsl);\r\n    } else {\r\n        return 'ffffff';\r\n    }\r\n}\r\n\r\nfunction generateImage(gradient, width, height) {\r\n    const { stack, isLinear, degrees, center } = gradient;\r\n    const validDegrees = degrees || 0;\r\n\r\n    const canvas = document.createElement('CANVAS');\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    const ctx = canvas.getContext('2d');\r\n    let g;\r\n\r\n    if (isLinear) {\r\n        const maxLen = width;\r\n        const aspect = height / width;\r\n        const angle = Math.PI / 2 + toRadians(validDegrees);\r\n        g = ctx.createLinearGradient(\r\n            width / 2 + Math.cos(angle) * maxLen * 0.5,\r\n            height / 2 + Math.sin(angle) * maxLen * 0.5 * aspect,\r\n            width / 2 - Math.cos(angle) * maxLen * 0.5,\r\n            height / 2 - Math.sin(angle) * maxLen * 0.5 * aspect\r\n        );\r\n    } else {\r\n        const radius = calculateRadius(width, height, center);\r\n        const start = (stack[0].stop / 100) * radius;\r\n        const end = (stack[stack.length - 1].stop / 100) * radius;\r\n        const offset = calculateCenterOffset(width, height, center);\r\n\r\n        g = ctx.createRadialGradient(\r\n            width / 2 + offset.width,\r\n            height / 2 + offset.height,\r\n            start,\r\n            width / 2 + offset.width,\r\n            height / 2 + offset.height,\r\n            end\r\n        );\r\n    }\r\n\r\n    stack.forEach((color) => {\r\n        const { hex, stop } = color;\r\n        g.addColorStop(stop / 100, '#' + hex);\r\n    });\r\n\r\n    // Fill with gradient\r\n    ctx.fillStyle = g;\r\n    // (startx, starty, endx, endy)\r\n    ctx.fillRect(0, 0, width, height);\r\n    const url = canvas.toDataURL('image/png');\r\n\r\n    return url;\r\n}\r\n\r\nfunction rgbToHsv(rgb) {\r\n    let { r, g, b } = rgb;\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n\r\n    var max = Math.max(r, g, b),\r\n        min = Math.min(r, g, b);\r\n    var h,\r\n        s,\r\n        v = max;\r\n\r\n    var d = max - min;\r\n    s = max === 0 ? 0 : d / max;\r\n\r\n    if (max === min) {\r\n        h = 0; // achromatic\r\n    } else {\r\n        switch (max) {\r\n            case r:\r\n                h = (g - b) / d + (g < b ? 6 : 0);\r\n                break;\r\n            case g:\r\n                h = (b - r) / d + 2;\r\n                break;\r\n            case b:\r\n                h = (r - g) / d + 4;\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n        h /= 6;\r\n    }\r\n\r\n    s *= 100;\r\n    v *= 100;\r\n\r\n    return { h, s, v };\r\n}\r\n\r\nfunction hsvToHex(hsv) {\r\n    let { h, s, v } = hsv;\r\n    h /= 360;\r\n    s /= 100;\r\n    v /= 100;\r\n    var r, g, b;\r\n\r\n    var i = Math.floor(h * 6);\r\n    var f = h * 6 - i;\r\n    var p = v * (1 - s);\r\n    var q = v * (1 - f * s);\r\n    var t = v * (1 - (1 - f) * s);\r\n\r\n    switch (i % 6) {\r\n        case 0:\r\n            r = v;\r\n            g = t;\r\n            b = p;\r\n            break;\r\n        case 1:\r\n            r = q;\r\n            g = v;\r\n            b = p;\r\n            break;\r\n        case 2:\r\n            r = p;\r\n            g = v;\r\n            b = t;\r\n            break;\r\n        case 3:\r\n            r = p;\r\n            g = q;\r\n            b = v;\r\n            break;\r\n        case 4:\r\n            r = t;\r\n            g = p;\r\n            b = v;\r\n            break;\r\n        case 5:\r\n            r = v;\r\n            g = p;\r\n            b = q;\r\n            break;\r\n        default:\r\n            return;\r\n    }\r\n\r\n    r *= 255;\r\n    g *= 255;\r\n    b *= 255;\r\n\r\n    return (\r\n        (1 << 24) +\r\n        (Math.round(r) << 16) +\r\n        (Math.round(g) << 8) +\r\n        Math.round(b)\r\n    )\r\n        .toString(16)\r\n        .slice(1);\r\n}\r\n\r\nexport {\r\n    hexToRGB,\r\n    isDark,\r\n    toBgString,\r\n    toStopBarBgString,\r\n    getColorwheel,\r\n    toCSSBgString,\r\n    generateImage,\r\n    getHue,\r\n    hexToRgb,\r\n    getSL,\r\n    hslToHex,\r\n    rgbToHsv,\r\n    hsvToHex,\r\n};\r\n","import React from 'react';\r\nimport '../../Styles/Preview/Preview.css';\r\nimport DownloadButton from './DownloadButton';\r\nimport ExpandButton from './ExpandButton';\r\nimport Dimensions from './Dimensions';\r\nimport Degrees from './Degrees';\r\nimport LinearRadial from './LinearRadial';\r\nimport Center from './Center';\r\nimport { generateImage } from '../../Utils/colorUtils';\r\n\r\nclass Preview extends React.Component {\r\n    generateImage() {\r\n        const { gradient, width, height } = this.props;\r\n        return generateImage(gradient, width, height);\r\n    }\r\n\r\n    isValidImage = () => {\r\n        const { width, height } = this.props;\r\n        return width && height;\r\n    };\r\n\r\n    download = () => {\r\n        const url = this.generateImage();\r\n        const link = document.createElement('a');\r\n        link.download = 'gradient';\r\n        link.href = url;\r\n        link.click();\r\n    };\r\n\r\n    expand = () => {\r\n        const url = this.generateImage();\r\n        const w = window.open('about:blank');\r\n        const image = new Image();\r\n        image.src = url;\r\n\r\n        setTimeout(function () {\r\n            w.document.write(image.outerHTML);\r\n        }, 0);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            gradient,\r\n            width,\r\n            height,\r\n            handleLinearRadialChange,\r\n            handleCenterChange,\r\n            handleWidthChange,\r\n            handleHeightChange,\r\n            handleDegreesChange,\r\n        } = this.props;\r\n        const { degrees, isLinear, center } = gradient;\r\n        const buttonsDisplayStyle = this.isValidImage()\r\n            ? { '': '' }\r\n            : { display: 'none' };\r\n        const Customize = isLinear ? (\r\n            <Degrees\r\n                degrees={degrees}\r\n                handleDegreesChange={handleDegreesChange}\r\n            />\r\n        ) : (\r\n            <Center center={center} clickFunction={handleCenterChange} />\r\n        );\r\n        const background = gradient.toBgString();\r\n        const DIV_MAX = 350;\r\n\r\n        const longer = Math.max(height, width);\r\n        const shorter = Math.min(height, width);\r\n\r\n        let scaledHeight, scaledWidth;\r\n\r\n        if (longer === height) {\r\n            scaledHeight = DIV_MAX;\r\n            scaledWidth = (DIV_MAX / longer) * shorter;\r\n            buttonsDisplayStyle.bottom = '10px';\r\n        } else {\r\n            scaledWidth = DIV_MAX;\r\n            scaledHeight = (DIV_MAX / longer) * shorter;\r\n            buttonsDisplayStyle.top = '106px';\r\n        }\r\n\r\n        return (\r\n            <div className='preview-container'>\r\n                <div className='preview-header'>\r\n                    <h2>PREVIEW</h2>\r\n                    <LinearRadial\r\n                        isLinear={isLinear}\r\n                        changeFunction={handleLinearRadialChange}\r\n                    />\r\n                </div>\r\n                <div className='preview-content-wrapper'>\r\n                    <div\r\n                        className='preview-content'\r\n                        style={{\r\n                            background,\r\n                            height: scaledHeight,\r\n                            width: scaledWidth,\r\n                        }}\r\n                    />\r\n                    <div\r\n                        className='preview-buttons-container'\r\n                        style={buttonsDisplayStyle}\r\n                    >\r\n                        <ExpandButton clickFunction={this.expand} />\r\n                        <DownloadButton clickFunction={this.download} />\r\n                    </div>\r\n                </div>\r\n                <div className='preview-interface'>\r\n                    <Dimensions\r\n                        height={height}\r\n                        width={width}\r\n                        handleWidthChange={handleWidthChange}\r\n                        handleHeightChange={handleHeightChange}\r\n                    />\r\n                    {Customize}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Preview;\r\n","import { toBgString, toStopBarBgString, toCSSBgString } from './colorUtils';\r\n\r\nclass Gradient {\r\n    constructor(stack, isLinear, degrees, center, name) {\r\n        this.stack = stack; // array of Color objects\r\n        this.isLinear = isLinear; // false if radial\r\n        this.degrees = degrees; // Number 0 - 360\r\n        this.center = center; // one of 9 positions\r\n        this.name = name; // name of friendo if suggested\r\n    }\r\n\r\n    toBgString = () => {\r\n        return toBgString(this);\r\n    };\r\n\r\n    toStopBarBgString = () => {\r\n        return toStopBarBgString(this);\r\n    };\r\n\r\n    toCSSBgString = () => {\r\n        return toCSSBgString(this);\r\n    };\r\n\r\n    // sort stack by increasing order of stop values\r\n    sortStack = () => {\r\n        const { stack } = this;\r\n        stack.sort((a, b) => (a.stop > b.stop ? 1 : -1));\r\n        let selected;\r\n        for (let i = 0; i < stack.length; i++) {\r\n            const color = stack[i];\r\n            color.index = i;\r\n            if (color.selected) {\r\n                selected = i;\r\n            }\r\n        }\r\n        return selected;\r\n    };\r\n\r\n    clone = () => {\r\n        return new Gradient(\r\n            this.stack.map((color) => color.clone()),\r\n            this.isLinear,\r\n            this.degrees,\r\n            this.center,\r\n            ''\r\n        );\r\n    };\r\n\r\n    getSortedStops = () => {\r\n        const { stack } = this;\r\n        return stack\r\n            .map((color) => color.stop)\r\n            .sort((a, b) => (a < b ? -1 : a > b ? 1 : 0));\r\n    };\r\n\r\n    reverse = () => {\r\n        const { stack } = this;\r\n        let stops = this.getSortedStops();\r\n        let stopValue;\r\n\r\n        stack.reverse();\r\n\r\n        for (let i = 0; i < stack.length; i++) {\r\n            const color = stack[i];\r\n            color.index = i;\r\n            color.stop = stops[i];\r\n\r\n            if (color.selected) {\r\n                stopValue = stops[i];\r\n            }\r\n        }\r\n\r\n        return stopValue;\r\n    };\r\n}\r\n\r\nexport { Gradient };\r\n","import {\r\n    hexToRGB,\r\n    isDark,\r\n    getColorwheel,\r\n    getHue,\r\n    hexToRgb,\r\n    getSL,\r\n    hslToHex,\r\n    rgbToHsv,\r\n    hsvToHex,\r\n} from './colorUtils';\r\n\r\nclass Color {\r\n    constructor(hex, stop, selected, index) {\r\n        this.hex = hex; // 6 char String hex representation of a color\r\n        this.stop = stop; // Number 0 - 100\r\n        this.selected = selected; // true if selected\r\n        this.index = index; // current place in the stack\r\n        this.r = this.getRGB('r') || 0;\r\n        this.g = this.getRGB('g') || 0;\r\n        this.b = this.getRGB('b') || 0;\r\n        this.blackPosition = null;\r\n    }\r\n\r\n    getRGB = (primary) => {\r\n        return hexToRGB(this.hex, primary);\r\n    };\r\n\r\n    isDark = () => {\r\n        return isDark(this.hex); // return if the color is dark\r\n    };\r\n\r\n    getColorwheel = () => {\r\n        return getColorwheel(this.hex);\r\n    };\r\n\r\n    getHue = () => {\r\n        const rgb = hexToRgb(this.hex);\r\n        if (rgb) {\r\n            return getHue(rgb);\r\n        }\r\n    };\r\n\r\n    isEqual = (color) => {\r\n        const { hex } = this;\r\n        return color.hex === hex;\r\n    };\r\n\r\n    clone = () => {\r\n        return new Color(this.hex, this.stop, this.selected, this.index);\r\n    };\r\n\r\n    changeHue = (h) => {\r\n        const sl = getSL(hexToRgb(this.hex));\r\n        const s = sl.s;\r\n        const l = sl.l;\r\n        const hsl = { h, s, l };\r\n        this.hex = hslToHex(hsl);\r\n        this.r = this.getRGB('r') || 0;\r\n        this.g = this.getRGB('g') || 0;\r\n        this.b = this.getRGB('b') || 0;\r\n    };\r\n\r\n    getSvPosition = () => {\r\n        const rgb = hexToRgb(this.hex);\r\n        if (rgb) {\r\n            const { s, v } = rgbToHsv(rgb);\r\n            let x, y;\r\n\r\n            if (this.blackPosition) {\r\n                x = this.blackPosition.x;\r\n                y = this.blackPosition.y;\r\n                this.blackPosition = null;\r\n            } else {\r\n                x = 2.5 * s;\r\n                y = 2.5 * (100 - v);\r\n            }\r\n            return { x, y };\r\n        }\r\n    };\r\n\r\n    changeColorFromPosition = ({ x, y }) => {\r\n        const h = this.getHue();\r\n        const s = x / 2.5;\r\n        const v = 100 - y / 2.5;\r\n        this.hex = hsvToHex({ h, s, v });\r\n        this.r = this.getRGB('r') || 0;\r\n        this.g = this.getRGB('g') || 0;\r\n        this.b = this.getRGB('b') || 0;\r\n\r\n        if (y === 250) {\r\n            this.blackPosition = { x, y };\r\n        }\r\n    };\r\n}\r\n\r\nexport { Color };\r\n","import { Gradient } from './Gradient';\r\nimport { Color } from './Color';\r\n\r\nconst KAREN = new Gradient(\r\n    [new Color('87cefa', 0, true, 0), new Color('da71d6', 100, false, 1)],\r\n    true,\r\n    45,\r\n    'center center',\r\n    'Karen'\r\n);\r\n\r\nconst DORA = new Gradient(\r\n    [new Color('fdafaf', 0, true, 0), new Color('a6a8f2', 100, false, 1)],\r\n    true,\r\n    45,\r\n    'center center',\r\n    'Dora'\r\n);\r\n\r\nconst STEVEN = new Gradient(\r\n    [\r\n        new Color('faee01', 0, true, 0),\r\n        new Color('f37721', 50, false, 1),\r\n        new Color('ec2e24', 100, false, 2),\r\n    ],\r\n    true,\r\n    160,\r\n    'center center',\r\n    'Steven'\r\n);\r\n\r\nconst SHARON = new Gradient(\r\n    [new Color('de6262', 0, true, 0), new Color('ffb88c', 100, false, 1)],\r\n    true,\r\n    30,\r\n    'top right',\r\n    'Sharon'\r\n);\r\n\r\nconst BRANDY = new Gradient(\r\n    [\r\n        new Color('47bcd5', 19, true, 0),\r\n        new Color('299de2', 37, false, 1),\r\n        new Color('2879d9', 52, false, 2),\r\n        new Color('2b3bc4', 77, false, 3),\r\n        new Color('2e189c', 92, false, 4),\r\n    ],\r\n    false,\r\n    0,\r\n    'top center',\r\n    'Brandy'\r\n);\r\n\r\nconst CHARLIE = new Gradient(\r\n    [new Color('89cff0', 0, true, 0), new Color('77dd77', 100, false, 1)],\r\n    false,\r\n    180,\r\n    'center left',\r\n    'Charlie'\r\n);\r\n\r\nconst JUDY = new Gradient(\r\n    [\r\n        new Color('ff598d', 0, true, 0),\r\n        new Color('d197ff', 33, false, 1),\r\n        new Color('ffafe6', 67, false, 2),\r\n        new Color('fff7ba', 100, false, 3),\r\n    ],\r\n    false,\r\n    45,\r\n    'bottom right',\r\n    'Judy'\r\n);\r\n\r\nconst BRYAN = new Gradient(\r\n    [\r\n        new Color('020024', 0, true, 0),\r\n        new Color('343258', 20, false, 1),\r\n        new Color('555570', 43, false, 2),\r\n        new Color('336d80', 64, false, 3),\r\n        new Color('8ec3cd', 100, false, 4),\r\n    ],\r\n    true,\r\n    0,\r\n    'bottom right',\r\n    'Bryan'\r\n);\r\n\r\nconst MAX = new Gradient(\r\n    [new Color('a1c4fd', 31, true, 0), new Color('c2e9fb', 100, false, 1)],\r\n    true,\r\n    78,\r\n    'center center',\r\n    'Max'\r\n);\r\n\r\nconst JEFF = new Gradient(\r\n    [\r\n        new Color('9c1eaf', 0, true, 0),\r\n        new Color('838e46', 40, false, 1),\r\n        new Color('72d4ba', 100, false, 2),\r\n    ],\r\n    true,\r\n    90,\r\n    'center center',\r\n    'Jeff'\r\n);\r\n\r\nconst REILLY = new Gradient(\r\n    [\r\n        new Color('f58025', 0, true, 0),\r\n        new Color('ee5a62', 25, false, 1),\r\n        new Color('e8589f', 50, false, 2),\r\n        new Color('b969eb', 75, false, 3),\r\n        new Color('6f7bfc', 100, false, 4),\r\n    ],\r\n    true,\r\n    35,\r\n    'center center',\r\n    'Reilly'\r\n);\r\n\r\nconst SUGGESTIONS = [\r\n    KAREN,\r\n    DORA,\r\n    STEVEN,\r\n    SHARON,\r\n    BRANDY,\r\n    CHARLIE,\r\n    JUDY,\r\n    BRYAN,\r\n    MAX,\r\n    JEFF,\r\n    REILLY,\r\n];\r\n\r\nexport { SUGGESTIONS };\r\n","import React from 'react';\r\nimport '../../Styles/CSS/CopyConfirmation.css';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { MdCheckCircle } from 'react-icons/md';\r\nimport { INPUT_TEXT_GRAY } from '../../Utils/hexConstants';\r\n\r\nfunction CopyConfirmation(props) {\r\n    const { display } = props;\r\n\r\n    return (\r\n        <Slide direction='up' in={display} mountOnEnter unmountOnExit>\r\n            <div className='copyconfirmation-container'>\r\n                <div className='copyconfirmation-content'>\r\n                    <MdCheckCircle color={INPUT_TEXT_GRAY} size='20px' />\r\n                    <p>CSS copied!</p>\r\n                </div>\r\n            </div>\r\n        </Slide>\r\n    );\r\n}\r\n\r\nexport default CopyConfirmation;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from './Components/Header';\r\nimport HexPicker from './Components/HexPicker/HexPicker';\r\nimport Stack from './Components/Stack/Stack';\r\nimport Suggested from './Components/Suggested/Suggested';\r\nimport StopBar from './Components/StopBar/StopBar';\r\nimport CSS from './Components/CSS/CSS';\r\nimport Preview from './Components/Preview/Preview';\r\nimport { SUGGESTIONS } from './Utils/gradientConstants';\r\nimport { Color } from './Utils/Color';\r\nimport { shuffle, padLeft } from './Utils/generalUtils';\r\nimport { MAX_SIZE, ENTER_KEY } from './Utils/inputConstants';\r\nimport CopyConfirmation from './Components/CSS/CopyConfirmation';\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        gradient: null,\r\n        selected: 0,\r\n        width: window.screen.width,\r\n        height: window.screen.height,\r\n        suggestedSelected: '',\r\n        suggested: [],\r\n        stopValue: null,\r\n        draggedColor: null,\r\n        cssConfirmationDisplay: false,\r\n    };\r\n\r\n    componentWillMount() {\r\n        this.shuffleSuggested();\r\n    }\r\n\r\n    shuffleSuggested = (e) => {\r\n        if (e) {\r\n            e.stopPropagation();\r\n        }\r\n\r\n        let shuffledSuggested = shuffle(SUGGESTIONS);\r\n        let shownSuggested = shuffledSuggested.slice(0, 4);\r\n        let first = shownSuggested[0];\r\n\r\n        this.setState({\r\n            gradient: first.clone(),\r\n            suggestedSelected: first.name,\r\n            suggested: shownSuggested,\r\n            stopValue: first.stack[0].stop,\r\n        });\r\n    };\r\n\r\n    addColor = () => {\r\n        const { gradient, selected } = this.state;\r\n        let gradientCopy = gradient.clone();\r\n        let { stack } = gradientCopy;\r\n\r\n        if (stack.length < 5) {\r\n            // set current selected as false\r\n            stack[selected].selected = false;\r\n\r\n            // recalculate stops\r\n            stack.forEach((c) => {\r\n                c.stop = Math.round((c.index / stack.length) * 100);\r\n            });\r\n\r\n            const defaultColor = new Color('ffffff', 100, true, stack.length);\r\n            stack.push(defaultColor);\r\n\r\n            this.setState({\r\n                gradient: gradientCopy,\r\n                selected: defaultColor.index,\r\n                stopValue: 100,\r\n            });\r\n        }\r\n    };\r\n\r\n    deleteColor = (e, deletedIndex) => {\r\n        const { gradient, selected, suggestedSelected } = this.state;\r\n        let gradientCopy = gradient.clone();\r\n        let { stack } = gradientCopy;\r\n\r\n        if (suggestedSelected) {\r\n            this.unsetSuggested();\r\n        }\r\n\r\n        if (stack.length > 2) {\r\n            e.stopPropagation();\r\n\r\n            // if deleting currently selected\r\n            if (deletedIndex === selected) {\r\n                let nextSelected;\r\n\r\n                if (deletedIndex === stack.length - 1) {\r\n                    // if deleting last one set selected as the one before\r\n                    nextSelected = deletedIndex - 1;\r\n                } else {\r\n                    // else set selected as the one after\r\n                    nextSelected = deletedIndex + 1;\r\n                }\r\n                stack[nextSelected].selected = true;\r\n            }\r\n\r\n            // delete item\r\n            stack.splice(deletedIndex, 1);\r\n\r\n            // update indices and stopValue\r\n            let newSelected, stopValue;\r\n            for (let i = 0; i < stack.length; i++) {\r\n                const color = stack[i];\r\n                color.index = i;\r\n                if (color.selected) {\r\n                    newSelected = i;\r\n                    stopValue = color.stop;\r\n                }\r\n            }\r\n\r\n            this.setState({\r\n                gradient: gradientCopy,\r\n                selected: newSelected,\r\n                stopValue,\r\n            });\r\n        }\r\n    };\r\n\r\n    changeSelected = (index) => {\r\n        const { gradient, selected } = this.state;\r\n        const { stack } = gradient;\r\n        let stackCopy = [...stack];\r\n\r\n        // set curr selected to false\r\n        stackCopy[selected].selected = false;\r\n\r\n        // set arg to selected and change this.state.selected\r\n        stackCopy[index].selected = true;\r\n\r\n        this.setState((prevState) => ({\r\n            gradient: {\r\n                ...prevState.gradient,\r\n                stack: stackCopy,\r\n            },\r\n            selected: index,\r\n            stopValue: stackCopy[index].stop,\r\n        }));\r\n    };\r\n\r\n    setSuggested = (e, suggestedName) => {\r\n        e.stopPropagation();\r\n\r\n        const { suggested } = this.state;\r\n\r\n        let selectedGradient;\r\n        /* iterate through suggested checking if the suggested's\r\n        name matches the one selected, if so, set\r\n        this.state.gradient as its clone */\r\n        suggested.forEach((gradient) => {\r\n            if (gradient.name === suggestedName) {\r\n                let clone = gradient.clone();\r\n                this.setState({ gradient: clone });\r\n                selectedGradient = clone;\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            suggestedSelected: suggestedName,\r\n            selected: 0,\r\n            stopValue: selectedGradient.stack[0].stop,\r\n        });\r\n    };\r\n\r\n    unsetSuggested = () => {\r\n        const { suggestedSelected } = this.state;\r\n        if (suggestedSelected) {\r\n            this.setState({ suggestedSelected: '' });\r\n        }\r\n    };\r\n\r\n    handleLinearRadialChange = () => {\r\n        const { gradient } = this.state;\r\n        let gradientCopy = gradient.clone();\r\n        const change = !gradient.isLinear;\r\n        gradientCopy.isLinear = change;\r\n\r\n        this.setState({\r\n            gradient: gradientCopy,\r\n        });\r\n    };\r\n\r\n    handleCenterChange = (center) => {\r\n        const { gradient } = this.state;\r\n        let gradientCopy = gradient.clone();\r\n        gradientCopy.center = center;\r\n\r\n        this.setState({\r\n            gradient: gradientCopy,\r\n        });\r\n    };\r\n\r\n    handleWidthChange = (e) => {\r\n        let { value } = e.target;\r\n\r\n        if (value) {\r\n            value = Number(value);\r\n        }\r\n        if (value <= MAX_SIZE) {\r\n            this.setState({\r\n                width: value,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleHeightChange = (e) => {\r\n        let { value } = e.target;\r\n\r\n        if (value) {\r\n            value = Number(value);\r\n        }\r\n        if (value <= MAX_SIZE) {\r\n            this.setState({\r\n                height: value,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleDegreesChange = (e) => {\r\n        let { value } = e.target;\r\n\r\n        if (value) {\r\n            value = Number(value);\r\n        }\r\n\r\n        if (value >= 0 && value < 360) {\r\n            const { gradient } = this.state;\r\n            let gradientCopy = gradient.clone();\r\n            gradientCopy.degrees = value;\r\n\r\n            this.setState({\r\n                gradient: gradientCopy,\r\n            });\r\n        }\r\n    };\r\n\r\n    handleStopChange = (e) => {\r\n        let { value } = e.target;\r\n        const { gradient, selected } = this.state;\r\n\r\n        if (value) {\r\n            value = Number(value);\r\n        }\r\n\r\n        if (value >= 0 && value <= 100) {\r\n            let gradientCopy = gradient.clone();\r\n            let { stack } = gradientCopy;\r\n\r\n            // update the value\r\n            stack[selected].stop = value;\r\n\r\n            // sort the stack in increasing order of stops\r\n            let newSelected = gradientCopy.sortStack();\r\n\r\n            this.setState({\r\n                gradient: gradientCopy,\r\n                selected: newSelected,\r\n            });\r\n        } else {\r\n            this.setState({ stopValue: gradient.stack[selected].stop });\r\n        }\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.keyCode === ENTER_KEY) {\r\n            this.handleStopChange(e);\r\n        }\r\n    };\r\n\r\n    setValue = (stopValue) => {\r\n        this.setState({ stopValue });\r\n    };\r\n\r\n    changeValue = (e) => {\r\n        const { value } = e.target;\r\n        this.setState({ stopValue: value });\r\n    };\r\n\r\n    // hasPound = true for stackItem, false for currentColor\r\n    handleHexChange = (e, hasPound) => {\r\n        let { value } = e.target;\r\n        const { selected, gradient } = this.state;\r\n        let gradientCopy = gradient.clone();\r\n\r\n        if (hasPound) {\r\n            value = value.substring(1);\r\n        }\r\n\r\n        gradientCopy.stack[selected].hex = value;\r\n\r\n        this.setState({\r\n            gradient: gradientCopy,\r\n        });\r\n    };\r\n\r\n    onDragStart = (e, draggedColor) => {\r\n        // step drag item to entire stack item, instead of just icon\r\n        e.dataTransfer.effectAllowed = 'move';\r\n        e.dataTransfer.setData('text/html', e.target.parentNode);\r\n        e.dataTransfer.setDragImage(e.target.parentNode, 20, 20);\r\n\r\n        this.setState({\r\n            draggedColor,\r\n        });\r\n    };\r\n\r\n    onDragOver = (e, color) => {\r\n        // let item drop where its dragged over\r\n        e.preventDefault();\r\n\r\n        const { gradient, draggedColor } = this.state;\r\n        const gradientCopy = gradient.clone();\r\n        const { stack } = gradientCopy;\r\n\r\n        // if dragged over is same as dragged item\r\n        if (draggedColor.isEqual(color)) {\r\n            return;\r\n        }\r\n\r\n        // create stack without dragged item\r\n        const newStack = stack.filter((color) => !color.isEqual(draggedColor));\r\n\r\n        // insert dragged item\r\n        newStack.splice(color.index, 0, draggedColor);\r\n\r\n        let stops = gradientCopy.getSortedStops();\r\n\r\n        // set indicies\r\n        for (let i = 0; i < newStack.length; i++) {\r\n            const currColor = newStack[i];\r\n            currColor.index = i;\r\n            currColor.stop = stops[i];\r\n        }\r\n        gradientCopy.stack = newStack;\r\n\r\n        this.setState({ gradient: gradientCopy });\r\n    };\r\n\r\n    onDragEnd = () => {\r\n        const { gradient, draggedColor } = this.state;\r\n        const gradientCopy = gradient.clone();\r\n        const { stack } = gradientCopy;\r\n        let selected, stopValue;\r\n\r\n        // save original stops\r\n        let stops = stack.map((color) => color.stop);\r\n\r\n        // update selected and stops\r\n        for (let i = 0; i < stack.length; i++) {\r\n            const color = stack[i];\r\n\r\n            if (!color.isEqual(draggedColor)) {\r\n                color.selected = false;\r\n            } else {\r\n                color.selected = true;\r\n                selected = color.index;\r\n                stopValue = stops[i];\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            draggedColor: null,\r\n            gradient: gradientCopy,\r\n            selected,\r\n            stopValue,\r\n        });\r\n    };\r\n\r\n    handleRChange = (e) => {\r\n        let { value } = e.target;\r\n\r\n        const { selected, gradient } = this.state;\r\n        let gradientCopy = gradient.clone();\r\n        const { stack } = gradientCopy;\r\n        let currColor = stack[selected];\r\n        let { g, b } = currColor;\r\n\r\n        let r;\r\n        if (value) {\r\n            value = Number(value);\r\n            r = value;\r\n        } else {\r\n            r = 0;\r\n        }\r\n\r\n        if (value >= 0 && value <= 255) {\r\n            r = padLeft(r.toString(16));\r\n            g = padLeft(g.toString(16));\r\n            b = padLeft(b.toString(16));\r\n            const newHex = r + g + b;\r\n            currColor.hex = newHex;\r\n            currColor.r = value;\r\n        }\r\n\r\n        this.setState({\r\n            gradient: gradientCopy,\r\n        });\r\n    };\r\n\r\n    handleGChange = (e) => {\r\n        let { value } = e.target;\r\n\r\n        const { selected, gradient } = this.state;\r\n        let gradientCopy = gradient.clone();\r\n        const { stack } = gradientCopy;\r\n        let currColor = stack[selected];\r\n        let { r, b } = currColor;\r\n\r\n        let g;\r\n        if (value) {\r\n            value = Number(value);\r\n            g = value;\r\n        } else {\r\n            g = 0;\r\n        }\r\n\r\n        if (value >= 0 && value <= 255) {\r\n            r = padLeft(r.toString(16));\r\n            g = padLeft(g.toString(16));\r\n            b = padLeft(b.toString(16));\r\n            const newHex = r + g + b;\r\n            currColor.hex = newHex;\r\n            currColor.g = value;\r\n        }\r\n\r\n        this.setState({\r\n            gradient: gradientCopy,\r\n        });\r\n    };\r\n\r\n    handleBChange = (e) => {\r\n        let { value } = e.target;\r\n\r\n        const { selected, gradient } = this.state;\r\n        let gradientCopy = gradient.clone();\r\n        const { stack } = gradientCopy;\r\n        let currColor = stack[selected];\r\n        let { r, g } = currColor;\r\n\r\n        let b;\r\n        if (value) {\r\n            value = Number(value);\r\n            b = value;\r\n        } else {\r\n            b = 0;\r\n        }\r\n\r\n        if (value >= 0 && value <= 255) {\r\n            r = padLeft(r.toString(16));\r\n            g = padLeft(g.toString(16));\r\n            b = padLeft(b.toString(16));\r\n            const newHex = r + g + b;\r\n            currColor.hex = newHex;\r\n            currColor.b = value;\r\n        }\r\n\r\n        this.setState({\r\n            gradient: gradientCopy,\r\n        });\r\n    };\r\n\r\n    reverseStack = () => {\r\n        const { selected, gradient } = this.state;\r\n        let gradientCopy = gradient.clone();\r\n        const { stack } = gradientCopy;\r\n\r\n        let newSelected = stack.length - 1 - selected;\r\n        let stopValue = gradientCopy.reverse();\r\n\r\n        this.setState({\r\n            gradient: gradientCopy,\r\n            selected: newSelected,\r\n            stopValue,\r\n        });\r\n    };\r\n\r\n    showCSSConfirmation = () => {\r\n        this.setState({ cssConfirmationDisplay: true });\r\n        setTimeout(\r\n            () => this.setState({ cssConfirmationDisplay: false }),\r\n            2000\r\n        );\r\n    };\r\n\r\n    handleStopSlider = (values) => {\r\n        const { gradient } = this.state;\r\n        let gradientCopy = gradient.clone();\r\n        const { stack } = gradientCopy;\r\n\r\n        let stopValue;\r\n        for (let i = 0; i < stack.length; i++) {\r\n            const color = stack[i];\r\n            color.stop = values[i];\r\n\r\n            if (color.selected) {\r\n                stopValue = values[i];\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            gradient: gradientCopy,\r\n            stopValue,\r\n        });\r\n    };\r\n\r\n    // value is the H\r\n    handleColorSlider = (value) => {\r\n        const { gradient, selected } = this.state;\r\n        let gradientCopy = gradient.clone();\r\n        const { stack } = gradientCopy;\r\n        const color = stack[selected];\r\n        color.changeHue(value);\r\n\r\n        this.setState({\r\n            gradient: gradientCopy,\r\n        });\r\n    };\r\n\r\n    updatePosition = ({ x, y }) => {\r\n        const { gradient, selected } = this.state;\r\n        let gradientCopy = gradient.clone();\r\n        const { stack } = gradientCopy;\r\n        const color = stack[selected];\r\n        color.changeColorFromPosition({ x, y });\r\n\r\n        this.setState({\r\n            gradient: gradientCopy,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            gradient,\r\n            suggestedSelected,\r\n            suggested,\r\n            selected,\r\n            height,\r\n            width,\r\n            stopValue,\r\n            cssConfirmationDisplay,\r\n        } = this.state;\r\n        const { stack } = gradient;\r\n        const color = stack[selected];\r\n\r\n        return (\r\n            <div className='App' onClick={this.unsetSuggested}>\r\n                <Header />\r\n                <Hidden smDown>\r\n                    <div className='container'>\r\n                        <div className='wrapper'>\r\n                            <div className='left'>\r\n                                <StopBar\r\n                                    gradient={gradient}\r\n                                    handleStopSlider={this.handleStopSlider}\r\n                                />\r\n                                <div className='color-picker'>\r\n                                    <div className='color-picker-left'>\r\n                                        <HexPicker\r\n                                            colorwheelColor={color.getColorwheel()}\r\n                                            color={color}\r\n                                            handleHexChange={\r\n                                                this.handleHexChange\r\n                                            }\r\n                                            handleRChange={this.handleRChange}\r\n                                            handleGChange={this.handleGChange}\r\n                                            handleBChange={this.handleBChange}\r\n                                            hue={color.getHue()}\r\n                                            handleColorSlider={\r\n                                                this.handleColorSlider\r\n                                            }\r\n                                            SV={\r\n                                                color.getSvPosition() || {\r\n                                                    x: 0,\r\n                                                    y: 0,\r\n                                                }\r\n                                            }\r\n                                            updatePosition={this.updatePosition}\r\n                                        />\r\n                                    </div>\r\n                                    <div className='color-picker-right'>\r\n                                        <Stack\r\n                                            gradient={gradient}\r\n                                            addColor={this.addColor}\r\n                                            changeSelected={this.changeSelected}\r\n                                            deleteColor={this.deleteColor}\r\n                                            handleKeyDown={this.handleKeyDown}\r\n                                            changeValue={this.changeValue}\r\n                                            stopValue={stopValue}\r\n                                            handleHexChange={\r\n                                                this.handleHexChange\r\n                                            }\r\n                                            onDragStart={this.onDragStart}\r\n                                            onDragOver={this.onDragOver}\r\n                                            onDragEnd={this.onDragEnd}\r\n                                            reverseStack={this.reverseStack}\r\n                                            handleStopChange={\r\n                                                this.handleStopChange\r\n                                            }\r\n                                        />\r\n                                        <Suggested\r\n                                            suggested={suggested}\r\n                                            selected={suggestedSelected}\r\n                                            setSuggested={this.setSuggested}\r\n                                            shuffleSuggested={\r\n                                                this.shuffleSuggested\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='wrapper'>\r\n                            <div className='right'>\r\n                                <Preview\r\n                                    gradient={gradient}\r\n                                    height={height}\r\n                                    width={width}\r\n                                    handleLinearRadialChange={\r\n                                        this.handleLinearRadialChange\r\n                                    }\r\n                                    handleCenterChange={this.handleCenterChange}\r\n                                    handleWidthChange={this.handleWidthChange}\r\n                                    handleHeightChange={this.handleHeightChange}\r\n                                    handleDegreesChange={\r\n                                        this.handleDegreesChange\r\n                                    }\r\n                                />\r\n                                <CSS\r\n                                    gradient={gradient}\r\n                                    showCSSConfirmation={\r\n                                        this.showCSSConfirmation\r\n                                    }\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <CopyConfirmation display={cssConfirmationDisplay} />\r\n                </Hidden>\r\n                <Hidden mdUp>\r\n                    <span\r\n                        style={{\r\n                            padding: 50,\r\n                        }}\r\n                    >\r\n                        gradient is currently not supported on mobile\r\n                        devices. Please use the site on a larger screen.\r\n                    </span>\r\n                </Hidden>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const MAX_SIZE = 32767;\r\n\r\nconst ENTER_KEY = 13;\r\n\r\nexport { MAX_SIZE, ENTER_KEY };\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}